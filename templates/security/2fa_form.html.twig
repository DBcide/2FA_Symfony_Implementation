{# templates/security/2fa_form.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Deuxième facteur d’authentification{% endblock %}

{% block body %}
    <div class="d-flex align-items-center justify-content-center min-vh-100 bg-light">
        <div class="card shadow-sm" style="max-width: 500px; width: 100%;">
            <div class="card-body p-4">

                <h2 class="h4 fw-bold text-center mb-4">
                    {{ "auth_code"|trans({}, 'SchebTwoFactorBundle') }}
                </h2>

                {# Authentication errors #}
                {% if authenticationError %}
                    <div class="alert alert-danger small">
                        {{ authenticationError|trans(authenticationErrorData, 'SchebTwoFactorBundle') }}
                    </div>
                {% endif %}

                {# Let the user select the authentication method #}
                {% if availableTwoFactorProviders|length > 1 %}
                    <div class="mb-3 text-muted small">
                        {{ "choose_provider"|trans({}, 'SchebTwoFactorBundle') }} :
                        {% for provider in availableTwoFactorProviders %}
                            <a class="ms-2 link-primary"
                               href="{{ path("2fa_login", {"preferProvider": provider}) }}">
                                {{ provider }}
                            </a>
                        {% endfor %}
                    </div>
                {% endif %}

                <form id="otp-form" action="{{ checkPathUrl ? checkPathUrl : path(checkPathRoute) }}" method="post">
                    <div class="mb-4 text-center">
                        <label class="form-label d-block mb-2">
                            {{ "auth_code"|trans({}, 'SchebTwoFactorBundle') }} {{ twoFactorProvider }} :
                        </label>
                        <div class="d-flex justify-content-between">
                            {% for i in 1..6 %}
                                <input type="text"
                                       class="form-control text-center mx-1 otp-input"
                                       maxlength="1"
                                       inputmode="numeric"
                                       pattern="[0-9]*"
                                       required
                                       style="width: 3rem; font-size: 1.5rem;" />
                            {% endfor %}
                        </div>
                    </div>

                    <input type="hidden" name="{{ authCodeParameterName }}" id="otp-hidden">

                    {% if displayTrustedOption %}
                        <div class="form-check mb-3">
                            <input id="_trusted"
                                   type="checkbox"
                                   name="{{ trustedParameterName }}"
                                   class="form-check-input">
                            <label for="_trusted" class="form-check-label">
                                {{ "trusted"|trans({}, 'SchebTwoFactorBundle') }}
                            </label>
                        </div>
                    {% endif %}

                    {% if isCsrfProtectionEnabled %}
                        <input type="hidden" name="{{ csrfParameterName }}" value="{{ csrf_token(csrfTokenId) }}">
                    {% endif %}

                    <div class="d-grid mb-3">
                        <button type="submit" class="btn btn-primary">
                            {{ "login"|trans({}, 'SchebTwoFactorBundle') }}
                        </button>
                    </div>
                </form>

                <div class="text-center mt-3">
                    <a href="{{ logoutPath }}" class="text-muted small">
                        {{ "cancel"|trans({}, 'SchebTwoFactorBundle') }}
                    </a>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const inputs = document.querySelectorAll(".otp-input");
            const hidden = document.getElementById("otp-hidden");
            const form = document.getElementById("otp-form");

            inputs.forEach((input, i) => {
                input.addEventListener("input", () => {
                    if (input.value.length === 1 && i < inputs.length - 1) {
                        inputs[i + 1].focus();
                    }
                });

                input.addEventListener("keydown", (e) => {
                    if (e.key === "Backspace" && !input.value && i > 0) {
                        inputs[i - 1].focus();
                    }
                });
            });

            form.addEventListener("submit", () => {
                let code = "";
                inputs.forEach(input => code += input.value);
                hidden.value = code;
            });
        });
    </script>
{% endblock %}
